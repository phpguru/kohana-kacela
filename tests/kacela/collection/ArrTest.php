<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-10-24 at 00:01:37.
 */
class Kacela_Collection_ArrTest extends Unittest_TestCase
{
    /**
     * @var Kacela_Collection_Arr
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    public function setUp()
    {
		parent::setUp();

		$arr = array(
			array('1', 'Gryffindor'),
			array('2', 'Hufflepuff'),
			array('3', 'Ravenclaw'),
			array('4', 'Slytherin')
		);

		foreach($arr as $k => $v) {
			$arr[$k] = (object) array('id' => (int) $v[0], 'name' => $v[1]);
		}

        $this->object = new Kacela_Collection_Arr(Kacela::load('house'), $arr);
    }

	/**
	 * @covers Gacela\Collection\Arr::current
	 */
	public function testCurrentInstance()
	{
		$current = $this->object->current();

		$this->assertInstanceOf('Model_House', $current);
		$this->assertEquals(1, $current->id);
	}

	public function testCurrentIsFirstElementInArray()
	{
		$current = $this->object->current();
		$this->assertEquals(1, $current->id);
	}

	public function testCurrentNotAdvancesPointer()
	{
		$current = $this->object->current();
		$this->assertEquals($current, $this->object->current());
	}

	public function testCurrentFindByPrimaryKey()
	{
		$data = array(
			(object) array('id' => 1),
			(object) array('id' => 2)
		);

		$arr = new Kacela_Collection_Arr(\Gacela::instance()->loadMapper('house'), $data);

		$this->assertSame('Gryffindor', $arr->current()->name);
	}

	public function testCurrentInvalidIndexReturnsEmptyInstance()
	{
		$this->object = new Kacela_Collection_Arr(\Gacela::instance()->loadMapper('house'), array());

		$this->assertSame(null, $this->object->current()->id);
	}

}
